// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @unique @default(uuid())
  username    String       @unique
  displayName String?
  password    String
  isAdmin     Boolean?
  createdAt   DateTime     @default(now())
  profile     UserProfile?
  tokens      UserToken[]
  documents   Document[]
  Category    Category[]
}

model UserToken {
  id           String @id @unique @default(uuid())
  userId       String
  user         User   @relation(fields: [userId], references: [id])
  refreshToken String
  accessToken  String
}

model UserProfile {
  id      String @id @unique @default(uuid())
  userId  String @unique
  user    User   @relation(fields: [userId], references: [id])
  content String
}

model Document {
  id         String                  @id @unique @default(uuid())
  title      String
  content    String
  userId     String
  user       User                    @relation(fields: [userId], references: [id])
  isDraft    Boolean                 @default(true)
  createdAt  DateTime                @default(now())
  updatedAt  DateTime                @updatedAt
  deletedAt  DateTime?
  categories CategoriesOnDocuments[]
}

model Category {
  id        String                  @id @default(uuid())
  name      String                  @unique
  createdAt DateTime                @default(now())
  deletedAt DateTime?
  documents CategoriesOnDocuments[]
  createdBy User                    @relation(fields: [creator], references: [id])
  creator   String
}

model CategoriesOnDocuments {
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  documentId String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String

  @@id([documentId, categoryId])
}
